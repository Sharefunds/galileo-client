/*
 * Program API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 4.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type CreateProvisioningRequest struct {
	// Web service username, as provided by Galileo. Pattern: Max 50 characters Example: `\"AbC123-9999\"`
	ApiLogin string `json:"apiLogin,omitempty"`
	// Web service password, as provided by Galileo. Pattern: Max 15 characters Example: `\"4sb62fh6w4h7w34g\"`
	ApiTransKey string `json:"apiTransKey,omitempty"`
	// Galileo-issued provider identifier. Pattern: Max 10 digits Example: `9999`
	ProviderId int32 `json:"providerId,omitempty"`
	// A unique provider-generated ID to identify this API call. A UUID is preferred. This value is used for <a href=\"ref:idempotency\" target=\"_blank\">idempotency</a>. Pattern: 60 characters or less Example: `\"9845dk-39fdk3fj3-4483483478\"`
	TransactionId string `json:"transactionId"`
	LogQueries int32 `json:"logQueries,omitempty"`
	// The <<glossary:PRN>>, <<glossary:PAN>> or <<glossary:CAD>> of the account. For card-specific endpoints such as this one, the CAD is preferred. Do not use the PRN if more than one card has ever been associated with this account. Pattern: PAN, PRN, or CAD Example: `\"074103447228\"`
	AccountNo string `json:"accountNo"`
	// The type of wallet to provision: * `1` &mdash; Apple Pay * `2` &mdash; Google Pay * `3` &mdash; Samsung Pay  Pattern: One digit Example: `2`
	WalletProvider int32 `json:"walletProvider"`
	// The leaf certificate returned by the wallet provider that was signed using `cert2`. Should be the hexlified (case insensitive) binary data of the certificate. See <a href=\"doc:creating-a-provisioning-request#certificate-formatting\" target=\"_blank\">Certificate formatting</a> for more information. Required for Apple Pay; not required for Samsung Pay or Google Pay.
	Cert1 string `json:"cert1,omitempty"`
	// The subordinate certificate returned by the wallet provider that was signed using the wallet providerâ€™s Certificate Authority (CA) certificate. Should be the hexlified (case insensitive) binary data of the certificate. See <a href=\"doc:creating-a-provisioning-request#certificate-formatting\" target=\"_blank\">Certificate formatting</a> for more information. Required for Apple Pay; not required for Samsung Pay or Google Pay.
	Cert2 string `json:"cert2,omitempty"`
	// The hexlified (case insensitive) nonce value returned by Apple Pay. **Required** for Apple Pay; not required for Google Pay or Samsung Pay. Pattern: 8 character nonce value Example: `\"9c023092\"`
	Nonce string `json:"nonce,omitempty"`
	// The hexlified (case insensitive) nonce signature value returned by Apple Pay. **Required** for Apple Pay; not required for Google Pay or Samsung Pay. Pattern: Nonce signature value Example: `\"4082f883ae62...\"`
	NonceSignature string `json:"nonceSignature,omitempty"`
	// Value returned by Google Pay or Samsung Pay for use with Visa. **Required** for Visa + Samsung Pay or Google Pay; not required for Visa + Apple Pay.
	ClientWalletAccountID string `json:"clientWalletAccountID,omitempty"`
	// Value returned by Google Pay or Samsung Pay for use with Visa. **Required** for Visa + Samsung Pay or Google Pay; not required for Visa + Apple Pay.
	ClientDeviceID string `json:"clientDeviceID,omitempty"`
}
