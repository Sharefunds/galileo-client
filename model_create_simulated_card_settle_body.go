/*
 * Program API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 4.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type CreateSimulatedCardSettleBody struct {
	// Web service username, as provided by Galileo. Pattern: Max 50 characters Example: `\"AbC123-9999\"`
	ApiLogin string `json:"apiLogin"`
	// Web service password, as provided by Galileo. Pattern: Max 15 characters Example: `\"4sb62fh6w4h7w34g\"`
	ApiTransKey string `json:"apiTransKey"`
	// Galileo-issued provider identifier. Pattern: Max 10 digits Example: `9999`
	ProviderId int32 `json:"providerId"`
	// A unique provider-generated ID to identify this API call. A UUID is preferred. This value is used for <a href=\"ref:idempotency\" target=\"_blank\">idempotency</a>. Pattern: 60 characters or less Example: `\"9845dk-39fdk3fj3-4483483478\"`
	TransactionId string `json:"transactionId"`
	// The <<glossary:PRN>> or <<glossary:PAN>> of the account. Pattern: PAN or PRN  Example: `\"074103447228\"`
	AccountNo string `json:"accountNo"`
	// The amount of the transaction in the currency at the point of sale. Pattern: Positive integer or decimal number Example: `100.00`, `100`, or `100.73`
	Amount float32 `json:"amount,omitempty"`
	// Specifies which card network to simulate: `visa` for Visa or `star` for Star or `mc_auth` for Mastercard or `visa_baseii` for Visa Base II. Pattern: `visa` or `mc_auth` or `visa_baseii` Example: `\"visa\"`
	Association string `json:"association"`
	// Simulated merchant name. Pass 40 characters for the complete string or pass up to 22 characters and the simulator will add 18 characters of a simulated address. Pattern: Max 40 alphanumeric characters Example: `\"Fred Jones Bagels\"`
	MerchantName string `json:"merchantName,omitempty"`
	// The currency code for `amount`. Use ISO 4217 numeric currency codes. This parameter is required when using this endpoint outside the United States. Pattern: 3 digits Example: `\"840\"`
	CurrencyCode string `json:"currencyCode,omitempty"`
	// The amount to be transferred from merchant to issuer in the settlement currency. Required when `specialFunctions: make_multicurrency` Pattern: Positive integer or decimal number Example: `100.00`, `100`, or `100.73`
	SettleAmount float32 `json:"settleAmount,omitempty"`
	// The currency code for `settleAmount`. Use ISO 4217 numeric currency codes. Required when `specialFunctions: make_multicurrency`. Pattern: 3 digits Example: `\"124\"`
	SettleCurrencyCode string `json:"settleCurrencyCode,omitempty"`
	// The amount that will be posted to the cardholder account in the currency of the account. Required when `specialFunctions: make_multicurrency`. Pattern: Positive integer or decimal number Example: `100.00`, `100`, or `100.73`
	CardBillingAmount float32 `json:"cardBillingAmount,omitempty"`
	// The currency code for `cardBillingAmount`. Use ISO 4217 numeric currency codes. Required when `specialFunctions: make_multicurrency`. Pattern: 3 digits Example: `484`
	CardBillingCurrencyCode string `json:"cardBillingCurrencyCode,omitempty"`
	// The authorization ID (`auth_id`) as returned by the <a href=\"ref:post_createsimulatedcardauth\" target=\"_blank\">Create Simulated Card Authorization</a> endpoint. Pattern: Positive integer Example: `58344373`
	AuthId string `json:"authId,omitempty"`
}
